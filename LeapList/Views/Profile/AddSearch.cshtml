@model LeapList.Models.AddSearchVM

@{
    ViewBag.Title = "AddSearch";
}

<h2>Add Search</h2>

@using (Html.BeginForm(new { @class = "form-horizontal" }))
{
    <div class="form-group col">
        <div class="row">
            @Html.LabelFor(x => x.SearchText, new { @class = "control-label col-lg-1 col-md-2" })
            @Html.TextBoxFor(x => x.SearchText, new { @class = "form-control col-sm-8" })
        </div>
    </div>
    <div class="form-group">
        <div class="row">
            @Html.LabelFor(x => x.MinPrice, new { @class = "control-label col-lg-1 col-md-2" })
            @Html.TextBoxFor(x => x.MinPrice, new { @class = "form-control col-sm-2" })
        </div>
    </div>
    <div class="form-group">
        <div class="row">
            @Html.LabelFor(x => x.MaxPrice, new { @class = "control-label col-lg-1 col-md-2" })
            @Html.TextBoxFor(x => x.MaxPrice, new { @class = "form-control col-sm-2" })
        </div>
    </div>
    <label class="control-label">Categories</label>
    <div class="form-group">
        <div class="row">
            @for (int i = 0; i < Model.Categories.Count; i++)
            {
                if (i == 0)
                {
                    @Html.Raw("<div class=\"col-md-3\">")
                }
                if (i % 10 == 0 && i != 0)
                {
                    @Html.Raw("</div><div class=\"col-md-3\">")
                }
                <div class="checkbox">
                    <label class="col-sm-10">
                        @Html.CheckBoxFor(m => m.Categories[i].IsChecked, new { id = @Model.Categories[i].Code }) @Model.Categories[i].Name
                        @Html.HiddenFor(m => m.Categories[i].Code)
                        @Html.HiddenFor(m => m.Categories[i].Name)
                    </label>
                </div>
            }
            @Html.Raw("</div>")
        </div>
    </div>
    <input type="submit" value="Add Search" class="btn btn-default"/>
}